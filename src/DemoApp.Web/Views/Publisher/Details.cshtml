@model DetailsViewModel<DemoApp.Web.DomainModels.Publisher>

@{
    ViewBag.Title = "Publisher / Details";
    var viewModel = Model;
    var model = Model.Model;
}

<h2>Publisher Details</h2>

<fieldset>
    <legend>@Html.DisplayFor(_ => model.PublisherName)</legend>       
    
    <dl>
        <dt>Books from this Publisher:</dt>
        <dd>
            @if (model.Books.Count==0)
            {
                <p class="alert-danger">No books</p>
            }
            else
            {
                foreach (var book in model.Books)
                {
                    <div class="alert-info">
                        @Html.ActionLink(book.BookName, "Details", "Store", new {guid = book.Id}, null)
                    </div>
                }
                <p></p>
            }
        </dd>
        
        
    
        <hr/>
        <h4>Audit Info</h4>
        <dt>Created By</dt>
        <dd>
            @Html.DisplayFor(_ => model.CreatedBy)
            <span class="help-block">
                This field is updated by Framework. Edit this entity and see how this changes based on current logged in user.
            </span>
        </dd>
        <dt>Created At</dt>
        <dd>@Html.DisplayFor(_ => model.CreatedAt)</dd> 
        
        <dt>Last Updated by</dt>
        <dd>
            @Html.DisplayFor(_ => model.LastUpdatedBy)
            <span class="help-block">
                This field is updated by Framework. Edit this entity and see how this changes based on current logged in user.
            </span>
        </dd>
        <dt>Last Updated At</dt>
        <dd>@Html.DisplayFor(_ => model.LastUpdatedAt)</dd>
    </dl>

    
    
    
</fieldset>
<p>
    @Html.ActionLink("Edit", "Edit", new { guid = model.Id }) |
    @Html.ActionLink("Back to List", "List")    
</p>
